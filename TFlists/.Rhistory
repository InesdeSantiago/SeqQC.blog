library(IntClust)
library(pheatmap)
jaccard_similarity = 1 - Distance(t(gene_matrix) , "tanimoto")
pheatmap(jaccard_similarity)
rs1 <- gene_matrix[rowSums(gene_matrix) == 1,]
nrow(rs1)
combinations <- apply(rs1,1, function(x) paste(names(x)[x==1], collapse=","))
par(mar=c(10,5,5,5))
barplot(sort(table(combinations)), las=2, cex.names=.5)
library(biomaRt)
library(data.table)
data <- data.table("ENSG"=names(combinations), "DB" = combinations)
any(duplicated(data$ENSG))
ensembl = useMart("ENSEMBL_MART_ENSEMBL",dataset="hsapiens_gene_ensembl",
host="www.ensembl.org")
genemap <- getBM( attributes = c("ensembl_gene_id", "hgnc_id"),
filters = "ensembl_gene_id",
values = data$ENSG,
mart = ensembl )
idx <- match(data$ENSG, genemap$ensembl_gene_id)
sum(is.na(idx))
data$HGNC <- genemap$hgnc_id[idx]
sum(is.na(data$HGNC))
sum(na.omit(data$HGNC == ""))
data <- data[!is.na(data$HGNC),]
data <- data[data$HGNC != "",]
# Get Gene Symbol
data[, "GeneSymbol" := grch38$symbol[match(ENSG, grch38$ensgene)] ]
data <- data[!is.na(GeneSymbol),]
# write
data[, ENSG := NULL]
data <- unique(data)
any(duplicated(data$HGNC))
dim(data)
fwrite(data, "Genes_in_TFlists.txt", sep="\t")
panther_results <- fread("pantherGeneList.txt", head = FALSE)
colnames(panther_results) <- c("GeneID","HGNC","GeneName","PantherFamily","PantherProteinClass","Species")
table(panther_results$Species)
panther_results <- panther_results[, .(HGNC, PantherProteinClass)]
#merge with previous list
any(duplicated(panther_results$HGNC))
any(duplicated(data$HGNC))
data <- merge(data, panther_results, by = "HGNC")
data <- data[PantherProteinClass != "",]
summaryData <- data[, .N, by = c("DB", "PantherProteinClass")]
orderClass <- data[, .N, by = "PantherProteinClass"][order(N)]$PantherProteinClass
summaryData$PantherProteinClass <- factor(summaryData$PantherProteinClass, levels = orderClass)
library(ggplot2)
library(jcolors)
ggplot(summaryData, aes(PantherProteinClass, N, fill = DB)) + geom_bar(stat="identity") +  coord_flip() + scale_fill_jcolors(palette = "pal7")
data[PantherProteinClass == "chromatin/chromatin-binding, or -regulatory protein(PC00077)", list(DB,GeneSymbol)] %>% unique()
data[PantherProteinClass == "RNA binding protein(PC00031)", list(DB,GeneSymbol)] %>% unique()
panther_results <- fread("pantherGeneList.txt", head = FALSE)
colnames(panther_results) <- c("GeneID","HGNC","GeneName","PantherFamily","PantherProteinClass","Species")
table(panther_results$Species)
panther_results <- panther_results[, .(HGNC, PantherProteinClass)]
#merge with previous list
any(duplicated(panther_results$HGNC))
any(duplicated(data$HGNC))
data <- merge(data, panther_results, by = "HGNC")
panther_results <- fread("pantherGeneList.txt", head = FALSE)
colnames(panther_results) <- c("GeneID","HGNC","GeneName","PantherFamily","PantherProteinClass","Species")
table(panther_results$Species)
panther_results <- panther_results[, .(HGNC, PantherProteinClass)]
#merge with previous list
any(duplicated(panther_results$HGNC))
any(duplicated(data$HGNC))
data <- merge(data, panther_results, by = "HGNC")
data <- data[PantherProteinClass != "",]
summaryData <- data[, .N, by = c("DB", "PantherProteinClass")]
orderClass <- data[, .N, by = "PantherProteinClass"][order(N)]$PantherProteinClass
summaryData$PantherProteinClass <- factor(summaryData$PantherProteinClass, levels = orderClass)
library(ggplot2)
library(jcolors)
ggplot(summaryData, aes(PantherProteinClass, N, fill = DB)) + geom_bar(stat="identity") +  coord_flip() + scale_fill_jcolors(palette = "pal7")
data[PantherProteinClass == "chromatin/chromatin-binding, or -regulatory protein(PC00077)", list(DB,GeneSymbol)] %>% unique()
panther_results <- fread("pantherGeneList.txt", head = FALSE)
colnames(panther_results) <- c("GeneID","HGNC","GeneName","PantherFamily","PantherProteinClass","Species")
table(panther_results$Species)
panther_results <- panther_results[, .(HGNC, PantherProteinClass)]
#merge with previous list
any(duplicated(panther_results$HGNC))
any(duplicated(data$HGNC))
data <- merge(data, panther_results, by = "HGNC")
options(stringsAsFactors = FALSE)
library(data.table)
library(annotables)
data(grch38)
# Vasquerizas_2009, Carro_2010, Forrest_2014, Lampber_2018: Make sure you download the corresponding files from the papers
Vasquerizas_2009 <- read.delim("Vasquerizas_2009_SupTable3.txt")$EnsemblID
Carro_2010 <- read.delim("Carro_2010_SupTable2.txt", head=FALSE)$V1
Carro_2010 <- unique(na.omit(grch38$ensgene[grch38$symbol %in% Carro_2010]))
Forrest_2014 <- read.delim("Forrest_2014.txt")$GeneID
Forrest_2014 <- unique(na.omit(grch38$ensgene[grch38$entrez %in% Forrest_2014]))
Lambert_2018 <- read.delim("Lambert_2018_SupTable1.txt")$ENSGid
# AnimalTFDB3
AnimalTFDB3_2019 <- fread('http://bioinfo.life.hust.edu.cn/static/AnimalTFDB3/download/Homo_sapiens_TF')$Ensembl
# Dorothea
library(dorothea)
data("entire_database", package = "dorothea")
Dorothea_2019 <- unique(na.omit(grch38$ensgene[grch38$symbol %in% unique(entire_database$tf)]))
# GO0003700
library(org.Hs.eg.db)
GO0003700 <- data.frame(mget("GO:0003700", org.Hs.egGO2ALLEGS)[[1]])[,1]
GO0003700 <- unique(na.omit(grch38$ensgene[grch38$entrez %in% GO0003700]))
TFs_lists <- list("Vasquerizas_2009"=Vasquerizas_2009,
"Carro_2010"=Carro_2010,
"Lambert_2018"=Lambert_2018,
"AnimalTFDB3_2019"=AnimalTFDB3_2019,
"Dorothea_2019"=Dorothea_2019,
"Forrest_2014"=Forrest_2014,
"GO0003700"=GO0003700)
library(venn)
venn(TFs_lists[1:7])
library(ComplexHeatmap)
gene_matrix <- list_to_matrix(TFs_lists)
m = make_comb_mat(gene_matrix)
UpSet(m)
library(IntClust)
library(pheatmap)
jaccard_similarity = 1 - Distance(t(gene_matrix) , "tanimoto")
pheatmap(jaccard_similarity)
rs1 <- gene_matrix[rowSums(gene_matrix) == 1,]
nrow(rs1)
combinations <- apply(rs1,1, function(x) paste(names(x)[x==1], collapse=","))
par(mar=c(10,5,5,5))
barplot(sort(table(combinations)), las=2, cex.names=.5)
library(biomaRt)
library(data.table)
data <- data.table("ENSG"=names(combinations), "DB" = combinations)
any(duplicated(data$ENSG))
ensembl = useMart("ENSEMBL_MART_ENSEMBL",dataset="hsapiens_gene_ensembl",
host="www.ensembl.org")
genemap <- getBM( attributes = c("ensembl_gene_id", "hgnc_id"),
filters = "ensembl_gene_id",
values = data$ENSG,
mart = ensembl )
idx <- match(data$ENSG, genemap$ensembl_gene_id)
sum(is.na(idx))
data$HGNC <- genemap$hgnc_id[idx]
sum(is.na(data$HGNC))
sum(na.omit(data$HGNC == ""))
data <- data[!is.na(data$HGNC),]
data <- data[data$HGNC != "",]
# Get Gene Symbol
data[, "GeneSymbol" := grch38$symbol[match(ENSG, grch38$ensgene)] ]
data <- data[!is.na(GeneSymbol),]
# write
data[, ENSG := NULL]
data <- unique(data)
any(duplicated(data$HGNC))
dim(data)
panther_results <- fread("pantherGeneList.txt", head = FALSE)
colnames(panther_results) <- c("GeneID","HGNC","GeneName","PantherFamily","PantherProteinClass","Species")
table(panther_results$Species)
panther_results <- panther_results[, .(HGNC, PantherProteinClass)]
#merge with previous list
any(duplicated(panther_results$HGNC))
any(duplicated(data$HGNC))
data <- merge(data, panther_results, by = "HGNC")
data <- data[PantherProteinClass != "",]
summaryData <- data[, .N, by = c("DB", "PantherProteinClass")]
orderClass <- data[, .N, by = "PantherProteinClass"][order(N)]$PantherProteinClass
summaryData$PantherProteinClass <- factor(summaryData$PantherProteinClass, levels = orderClass)
library(ggplot2)
library(jcolors)
ggplot(summaryData, aes(PantherProteinClass, N, fill = DB)) + geom_bar(stat="identity") +  coord_flip() + scale_fill_jcolors(palette = "pal7")
data[PantherProteinClass == "chromatin/chromatin-binding, or -regulatory protein(PC00077)", list(DB,GeneSymbol)] %>% unique()
data[PantherProteinClass == "ubiquitin-protein ligase(PC00234)", list(DB,GeneSymbol)] %>% unique()
data[PantherProteinClass == "general transcription factor(PC00259)" , list(DB,GeneSymbol)] %>% unique()
gene_matrix <- gene_matrix[rowSums(gene_matrix) >= 2,]
final_TF_list <- data.table("ENSG" = rownames(gene_matrix), "evidence" = apply(gene_matrix,1, function(x) paste(names(x)[x==1])))
dim(final_TF_list)
fwrite(final_TF_list, "Final_TFlist.txt", sep="\t")
entire_database$tf
write.table(entire_database$tf, quote = F, sep="t", row.names = F, file = "Dorothea_5Dec2020.txt")
write.table(unique(entire_database$tf), quote = F, sep="t", row.names = F, file = "Dorothea_5Dec2020.txt", head = F)
write.table(unique(entire_database$tf), quote = F, sep="t", row.names = F, file = "Dorothea_5Dec2020.txt", colnames = F)
write.table(unique(entire_database$tf), quote = F, sep="t", row.names = F, file = "Dorothea_5Dec2020.txt", col.names = F)
library(org.Hs.eg.db)
GO0003700 <- data.frame(mget("GO:0003700", org.Hs.egGO2ALLEGS)[[1]])[,1]
GO0003700
write.table(unique(GO0003700 ), quote = F, sep="t", row.names = F, file = "GO0003700_5Dec2020.txt", col.names = F)
# AnimalTFDB3 (2019)
AnimalTFDB3_2019 <- unique(fread('http://bioinfo.life.hust.edu.cn/static/AnimalTFDB3/download/Homo_sapiens_TF')$Ensembl)
length(AnimalTFDB3_2019 )
Lambert_2018 <- unique(read.delim("Lambert_2018_SupTable1.txt")$ENSGid)
length(Lambert_2018)
Vasquerizas_2009 <- unique(read.delim("Vasquerizas_2009_SupTable3.txt")$EnsemblID)
length(Vasquerizas_2009)
final_TF_list
library(biomaRt)
library(data.table)
data <- data.table("ENSG"=names(combinations), "DB" = combinations)
any(duplicated(data$ENSG))
data <- copy(final_TF_list)
ensembl = useMart("ENSEMBL_MART_ENSEMBL",dataset="hsapiens_gene_ensembl",
host="www.ensembl.org")
genemap <- getBM( attributes = c("ensembl_gene_id", "hgnc_id"),
filters = "ensembl_gene_id",
values = data$ENSG,
mart = ensembl )
idx <- match(data$ENSG, genemap$ensembl_gene_id)
sum(is.na(idx))
data$HGNC <- genemap$hgnc_id[idx]
sum(is.na(data$HGNC))
sum(na.omit(data$HGNC == ""))
data <- data[!is.na(data$HGNC),]
data <- data[data$HGNC != "",]
# Get Gene Symbol
data[, "GeneSymbol" := grch38$symbol[match(ENSG, grch38$ensgene)] ]
data <- data[!is.na(GeneSymbol),]
# write
data[, ENSG := NULL]
data <- unique(data)
any(duplicated(data$HGNC))
dim(data)
data
which(duplicated(data$HGNC))
data[1588,]
which(data$HGNC=="HGNC:13847")
data[1060,]
data[1588,]
final_TF_list[[1]]
final_TF_list[[2]]
final_TF_list[[2]][[1]]
class(final_TF_list)
data
data <- copy(final_TF_list)
ensembl = useMart("ENSEMBL_MART_ENSEMBL",dataset="hsapiens_gene_ensembl",
host="www.ensembl.org")
genemap <- getBM( attributes = c("ensembl_gene_id", "hgnc_id"),
filters = "ensembl_gene_id",
values = data$ENSG,
mart = ensembl )
idx <- match(data$ENSG, genemap$ensembl_gene_id)
sum(is.na(idx))
data$HGNC <- genemap$hgnc_id[idx]
sum(is.na(data$HGNC))
sum(na.omit(data$HGNC == ""))
data <- data[!is.na(data$HGNC),]
data <- data[data$HGNC != "",]
data[, ENSG := NULL]
data
data[, .(evidence = unique(evidence)), by = HGNC]
data[, ENSG := NULL]
data <- data[, .(evidence = unique(evidence)), by = HGNC]
# Get Gene Symbol
data[, "GeneSymbol" := grch38$symbol[match(ENSG, grch38$ensgene)] ]
data <- data[!is.na(GeneSymbol),]
data <- copy(final_TF_list)
ensembl = useMart("ENSEMBL_MART_ENSEMBL",dataset="hsapiens_gene_ensembl",
host="www.ensembl.org")
genemap <- getBM( attributes = c("ensembl_gene_id", "hgnc_id"),
filters = "ensembl_gene_id",
values = data$ENSG,
mart = ensembl )
idx <- match(data$ENSG, genemap$ensembl_gene_id)
sum(is.na(idx))
data$HGNC <- genemap$hgnc_id[idx]
sum(is.na(data$HGNC))
sum(na.omit(data$HGNC == ""))
data <- data[!is.na(data$HGNC),]
data <- data[data$HGNC != "",]
# Get Gene Symbol
data[, "GeneSymbol" := grch38$symbol[match(ENSG, grch38$ensgene)] ]
data <- data[!is.na(GeneSymbol),]
# Get unique
data[, ENSG := NULL]
data <- data[, .(evidence = unique(evidence),
GeneSymbol = unique(GeneSymbol)), by = HGNC]
data
any(duplicated(data$HGNC))
which(duplicated(data$HGNC)))
which(duplicated(data$HGNC))
data[20,]
which(data$HGNC == "HGNC:3114")
data[19,]
head(gene_matrix)
data <- reshape2::melt(gene_matrix, id = "row.names")
install.packages("reshape2")
data <- reshape2::melt(gene_matrix, id = "row.names")
data
data <- reshape2::melt(gene_matrix, id = "row.names")
data <- data[ vaue == 1]
colnames(data) <- c("ENSG", "evidence", "value")
data[, value := NULL]
data <- reshape2::melt(gene_matrix, id = "row.names")
data <- data[ value == 1]
colnames(data) <- c("ENSG", "evidence", "value")
data[, value := NULL]
ensembl = useMart("ENSEMBL_MART_ENSEMBL",dataset="hsapiens_gene_ensembl",
host="www.ensembl.org")
genemap <- getBM( attributes = c("ensembl_gene_id", "hgnc_id"),
filters = "ensembl_gene_id",
values = data$ENSG,
mart = ensembl )
idx <- match(data$ENSG, genemap$ensembl_gene_id)
data <- reshape2::melt(gene_matrix, id = "row.names")
data <- data[ value == 1]
data <- data[, c(1,2)]
colnames(data) <- c("ENSG", "evidence")
data <- reshape2::melt(gene_matrix, id = "row.names")
data <- data[ value == 1]
data <- data[, c(1,2)]
colnames(data) <- c("ENSG", "evidence")
data <- reshape2::melt(gene_matrix, id = "row.names")
data <- data[data$value == 1,]
data <- data[, c(1,2)]
colnames(data) <- c("ENSG", "evidence")
ensembl = useMart("ENSEMBL_MART_ENSEMBL",dataset="hsapiens_gene_ensembl",
host="www.ensembl.org")
genemap <- getBM( attributes = c("ensembl_gene_id", "hgnc_id"),
filters = "ensembl_gene_id",
values = data$ENSG,
mart = ensembl )
idx <- match(data$ENSG, genemap$ensembl_gene_id)
sum(is.na(idx))
data$HGNC <- genemap$hgnc_id[idx]
data
sum(is.na(data$HGNC))
sum(na.omit(data$HGNC == ""))
data <- data[!is.na(data$HGNC),]
data <- data[data$HGNC != "",]
data <- data.table(data)
data[, "GeneSymbol" := grch38$symbol[match(ENSG, grch38$ensgene)] ]
data <- data[!is.na(GeneSymbol),]
data
data[, ENSG := NULL]
data <- data[, .(evidence = list(unique(evidence)),
GeneSymbol = list(unique(GeneSymbol))), by = HGNC]
data
any(duplicated(data$HGNC))
dim(data)
Final_TFlist.txt
Final_TFlist
final_TF_list
fwrite(data, "Final_TFlist_with_HGNCsymbols.txt", sep="\t")
data
data[, evidence := NULL]
fwrite(data, "Final_TFlist_with_HGNCsymbols.txt", sep="\t")
panther_results <- fread("pantherGeneListFinal.txt", head = FALSE)
colnames(panther_results) <- c("GeneID","HGNC","GeneName","PantherFamily","PantherProteinClass","Species")
table(panther_results$Species)
panther_results <- panther_results[, .(HGNC, PantherProteinClass)]
#merge with previous list
any(duplicated(panther_results$HGNC))
any(duplicated(data$HGNC))
data <- merge(data, panther_results, by = "HGNC")
data <- data[PantherProteinClass != "",]
summaryData <- data[, .N, by = c("DB", "PantherProteinClass")]
data
library(biomaRt)
library(data.table)
data <- reshape2::melt(gene_matrix, id = "row.names")
data <- data[data$value == 1,]
data <- data[, c(1,2)]
colnames(data) <- c("ENSG", "evidence")
ensembl = useMart("ENSEMBL_MART_ENSEMBL",dataset="hsapiens_gene_ensembl",
host="www.ensembl.org")
genemap <- getBM( attributes = c("ensembl_gene_id", "hgnc_id"),
filters = "ensembl_gene_id",
values = data$ENSG,
mart = ensembl )
idx <- match(data$ENSG, genemap$ensembl_gene_id)
sum(is.na(idx))
data$HGNC <- genemap$hgnc_id[idx]
sum(is.na(data$HGNC))
sum(na.omit(data$HGNC == ""))
data <- data[!is.na(data$HGNC),]
data <- data[data$HGNC != "",]
# Get Gene Symbol
data <- data.table(data)
data[, "GeneSymbol" := grch38$symbol[match(ENSG, grch38$ensgene)] ]
data <- data[!is.na(GeneSymbol),]
# Get unique
data[, ENSG := NULL]
data <- data[, .(evidence = list(unique(evidence)),
GeneSymbol = list(unique(GeneSymbol))), by = HGNC]
# write
any(duplicated(data$HGNC))
dim(data)
panther_results <- fread("pantherGeneListFinal.txt", head = FALSE)
colnames(panther_results) <- c("GeneID","HGNC","GeneName","PantherFamily","PantherProteinClass","Species")
table(panther_results$Species)
panther_results <- panther_results[, .(HGNC, PantherProteinClass)]
#merge with previous list
any(duplicated(panther_results$HGNC))
any(duplicated(data$HGNC))
data <- merge(data, panther_results, by = "HGNC")
data
data <- data[PantherProteinClass != "",]
summaryData <- data[, .N, by = "PantherProteinClass"][order(N)]
summaryData$PantherProteinClass <- factor(summaryData$PantherProteinClass, levels = summaryData$PantherProteinClass)
ummaryData$
summaryData
library(ggplot2)
library(jcolors)
ggplot(summaryData, aes(PantherProteinClass, N, fill = DB)) + geom_bar(stat="identity") +  coord_flip() + scale_fill_jcolors(palette = "pal7")
library(ggplot2)
library(jcolors)
ggplot(summaryData, aes(PantherProteinClass, N)) + geom_bar(stat="identity") +  coord_flip() + scale_fill_jcolors(palette = "pal7")
summaryData
panther_results
any(duplicated(panther_results$HGNC))
sum(summaryData$N == 1)
sum(summaryData$N > 1)
sum(summaryData$N == 2)
sum(summaryData$N > 2)
sum(summaryData$N)[summaryData$N == 1]
sum(summaryData[summaryData$N == 1])
sum(summaryData$N[summaryData$N == 1])
sum(summaryData$N[summaryData$N > 1])
ggplot(summaryData[N > 1], aes(PantherProteinClass, N)) + geom_bar(stat="identity") +  coord_flip() + scale_fill_jcolors(palette = "pal7") + ggtitle("Protein Classes of Selected TFs")
sum(summaryData$N[summaryData$N <= 2])
sum(summaryData$N[summaryData$N > 2])
sum(summaryData$N[summaryData$N == 1])
sum(summaryData$N[summaryData$N <= 2])
sum(summaryData$N[summaryData$N > 2])
ggplot(summaryData[N > 2], aes(PantherProteinClass, N)) + geom_bar(stat="identity") +  coord_flip() + scale_fill_jcolors(palette = "pal7") + ggtitle("Protein Classes of Selected TFs")
sum(summaryData$N[summaryData$N == 1])
sum(summaryData$N[summaryData$N <= 2])
sum(summaryData$N[summaryData$N <= 3])
sum(summaryData$N[summaryData$N > 3])
ggplot(summaryData[N > 3], aes(PantherProteinClass, N)) + geom_bar(stat="identity") +  coord_flip() + scale_fill_jcolors(palette = "pal7") + ggtitle("Protein Classes of Selected TFs")
options(stringsAsFactors = FALSE)
library(data.table)
library(annotables)
data(grch38)
# Vasquerizas_2009, Carro_2010, Forrest_2014, Lampber_2018: Make sure you download the corresponding files from the papers
Vasquerizas_2009 <- unique(read.delim("Vasquerizas_2009_SupTable3.txt")$EnsemblID)
Carro_2010 <- read.delim("Carro_2010_SupTable2.txt", head=FALSE)$V1
Carro_2010 <- unique(na.omit(grch38$ensgene[grch38$symbol %in% Carro_2010]))
Forrest_2014 <- read.delim("Forrest_2014.txt")$GeneID
Forrest_2014 <- unique(na.omit(grch38$ensgene[grch38$entrez %in% Forrest_2014]))
Lambert_2018 <- unique(read.delim("Lambert_2018_SupTable1.txt")$ENSGid)
# AnimalTFDB3 (2019)
AnimalTFDB3_2019 <- unique(fread('http://bioinfo.life.hust.edu.cn/static/AnimalTFDB3/download/Homo_sapiens_TF')$Ensembl)
#write.table(unique(entire_database$tf), quote = F, sep="t", row.names = F, file = "Dorothea_5Dec2020.txt", col.names = F)
# Dorothea (2019)
library(dorothea)
data("entire_database", package = "dorothea")
Dorothea_2019 <- unique(na.omit(grch38$ensgene[grch38$symbol %in% unique(entire_database$tf)]))
# write.table(unique(entire_database$tf), quote = F, sep="t", row.names = F, file = "Dorothea_5Dec2020.txt", col.names = F)
# GO0003700
library(org.Hs.eg.db)
GO0003700 <- data.frame(mget("GO:0003700", org.Hs.egGO2ALLEGS)[[1]])[,1]
# write.table(unique(GO0003700 ), quote = F, sep="t", row.names = F, file = "GO0003700_5Dec2020.txt", col.names = F)
GO0003700 <- unique(na.omit(grch38$ensgene[grch38$entrez %in% GO0003700]))
TFs_lists <- list("Vasquerizas_2009"=Vasquerizas_2009,
"Carro_2010"=Carro_2010,
"Lambert_2018"=Lambert_2018,
"AnimalTFDB3_2019"=AnimalTFDB3_2019,
"Dorothea_2019"=Dorothea_2019,
"Forrest_2014"=Forrest_2014,
"GO0003700"=GO0003700)
library(venn)
venn(TFs_lists[1:7])
library(ComplexHeatmap)
gene_matrix <- list_to_matrix(TFs_lists)
m = make_comb_mat(gene_matrix)
UpSet(m)
library(IntClust)
library(pheatmap)
jaccard_similarity = 1 - Distance(t(gene_matrix) , "tanimoto")
pheatmap(jaccard_similarity)
rs1 <- gene_matrix[rowSums(gene_matrix) == 1,]
nrow(rs1)
combinations <- apply(rs1,1, function(x) paste(names(x)[x==1], collapse=","))
par(mar=c(10,5,5,5))
barplot(sort(table(combinations)), las=2, cex.names=.5)
library(biomaRt)
library(data.table)
data <- data.table("ENSG"=names(combinations), "DB" = combinations)
any(duplicated(data$ENSG))
ensembl = useMart("ENSEMBL_MART_ENSEMBL",dataset="hsapiens_gene_ensembl",
host="www.ensembl.org")
genemap <- getBM( attributes = c("ensembl_gene_id", "hgnc_id"),
filters = "ensembl_gene_id",
values = data$ENSG,
mart = ensembl )
idx <- match(data$ENSG, genemap$ensembl_gene_id)
sum(is.na(idx))
data$HGNC <- genemap$hgnc_id[idx]
sum(is.na(data$HGNC))
sum(na.omit(data$HGNC == ""))
data <- data[!is.na(data$HGNC),]
data <- data[data$HGNC != "",]
# Get Gene Symbol
data[, "GeneSymbol" := grch38$symbol[match(ENSG, grch38$ensgene)] ]
data <- data[!is.na(GeneSymbol),]
# write
data[, ENSG := NULL]
data <- unique(data)
any(duplicated(data$HGNC))
dim(data)
panther_results <- fread("pantherGeneList.txt", head = FALSE)
colnames(panther_results) <- c("GeneID","HGNC","GeneName","PantherFamily","PantherProteinClass","Species")
table(panther_results$Species)
panther_results <- panther_results[, .(HGNC, PantherProteinClass)]
#merge with previous list
any(duplicated(panther_results$HGNC))
any(duplicated(data$HGNC))
data <- merge(data, panther_results, by = "HGNC")
data <- data[PantherProteinClass != "",]
summaryData <- data[, .N, by = c("DB", "PantherProteinClass")]
orderClass <- data[, .N, by = "PantherProteinClass"][order(N)]$PantherProteinClass
orderClass
data[PantherProteinClass == "C2H2 zinc finger transcription factor(PC00248)" , list(DB,GeneSymbol)] %>% unique()
data[PantherProteinClass == "basic helix-loop-helix transcription factor(PC00055)" , list(DB,GeneSymbol)] %>% unique()
data[PantherProteinClass == "DNA-binding transcription factor(PC00218)" , list(DB,GeneSymbol)] %>% unique()
data[PantherProteinClass == "zinc finger transcription factor(PC00244)" , list(DB,GeneSymbol)] %>% unique()
